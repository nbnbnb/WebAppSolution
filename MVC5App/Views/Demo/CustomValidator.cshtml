@model MVC5App.Models.Book

@{
    ViewBag.Title = "CustomValidator";
}

<h2>CustomValidator</h2>


<div class="container">

    <blockquote>
        通过 jQuery、jquery.validate.js 和数据注解实现服务端和客户端的验证
        <br />
        在 Web.config 配置中可以设置此功能是否开启
    </blockquote>

    @using (Html.BeginForm())
    {
        @Html.EditorForModel()
        <div class="form-group">
            <input type="submit" class="btn btn-primary" value="添加" />
        </div>
    }

</div>

@section scripts{
    <script>
        // 将数据从 data- 属性中抽取
        // 注入到验证类型中
        jQuery.validator.unobtrusive.adapters.add('agerange', ['minage', 'maxage'], function (options) {

            // options 对象
            /*
            {
                "element": {},
                "form": {
                    "0": {},
                    "1": {},
                    "2": {},
                    "3": {}
                },
                "message": "字段 年龄 必须在 10 和 30 之间。",
                "params": {
                    "minage": "10",
                    "maxage": "30"
                },
                "rules": {
                    "date": true,
                    "required": true
                },
                "messages": {
                    "date": "The field 出生日期 must be a date.",
                    "required": "出生日期 字段是必需的。"
                }
            }
            */

            // 设置规则的参数 params
            options.rules['agerange'] = {
                minage: options.params.minage,
                maxage: options.params.maxage
            };
            // 设置错误消息
            options.messages['agerange'] = options.message;
        });

        // 指定验证类型管理的验证方法
        jQuery.validator.addMethod("agerange", function (value, element, params) {
            value = value.replace(/(^\s*)(\s*$)/g, "");
            if (!value) {
                return true;
            }
            var birthDate = new Date(value);
            var currentDate = new Date();
            var age = currentDate.getFullYear() - birthDate.getFullYear();
            if (isNaN(age)) {
                return false;
            }
            return age >= params.minage && age <= params.maxage;
        });

    </script>
}